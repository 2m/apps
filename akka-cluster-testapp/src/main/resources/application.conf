collecting-failure-detector = {
  implementation-class = "testapp.CollectorFailureDetector"

  sliding-window-size = 16

  heartbeat-interval = 1 s

  acceptable-heartbeat-pause = 10 s
}

akka {

  loglevel=DEBUG
  #loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = on
  }

  cluster {
    auto-down = on
    roles = ["backend", "frontend"]

    #failure-detector = ${collecting-failure-detector}
    #failure-detector.tag = cluster

    gossip-interval = 200ms
    leader-actions-interval = 200ms
    unreachable-nodes-reaper-interval = 200ms
    failure-detector {
      threshold = 10
      heartbeat-interval = 400ms
      acceptable-heartbeat-pause = 10s
    }
  }
}

#akka.remote {
  #transport-failure-detector = ${collecting-failure-detector}
  #transport-failure-detector.tag = remoting
  #watch-failure-detector = ${collecting-failure-detector}
  #watch-failure-detector.tag = remote-watch
#}

akka.remote {
  quarantine-systems-for = 30s
  
  transport-failure-detector {
    heartbeat-interval = 1s
    acceptable-heartbeat-pause = 10s
  }
  watch-failure-detector {
    heartbeat-interval = 1s
    acceptable-heartbeat-pause = 10s
  }
}

akka.actor.deployment {

  /stats/singleton/workerRouter {
    router = consistent-hashing
    nr-of-instances = 100
    cluster {
      enabled = on
      max-nr-of-instances-per-node = 2
      allow-local-routees = off
      use-role = backend
    }
  }
}

stats.tick-interval = 5s
